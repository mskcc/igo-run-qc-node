name: CI/CD Pipeline for IGO Run QC
on:
  workflow_dispatch:  # Manual trigger only
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - production

jobs:
  deploy-to-dev:
    name: Deploy to DEV (`dlviigoapps1`)
    runs-on: self-hosted  # Keeping exactly as your working version
    if: github.event.inputs.environment == 'dev'
    environment: dev
    steps:
      - name: Deploy to DEV
        run: |
          echo "üöÄ Deploying to DEV on dlviigoapps1..."
          cd /srv/prep/deployments/igo-run-qc-node
          git checkout main
          git pull origin main
          cd frontend/
          CI=false npm run build
          cp -rT build/ ../backend/public/
          cd ..
          cp -rT backend/ /srv/www/runQC/
          echo "üîÅ Checking if app exists in PM2..."
          if pm2 list | grep -q "runQC"; then
            echo "App exists, restarting..."
            pm2 restart runQC
          else
            echo "App doesn't exist, starting..."
            cd /srv/www/runQC/
            pm2 start index.js --name runQC
          fi
          sleep 5
          if ! pm2 show runQC | grep -q "status.*online"; then
            echo "‚ùå PM2 process 'runQC' failed to start!"
            pm2 logs runQC --lines 50
            exit 1
          fi
          echo "‚úÖ Deployment completed successfully"

  deploy-to-prod:  # Fixed: Missing proper indentation
    name: Deploy to PROD (`plviigoapps1`)
    runs-on: [self-hosted, prod, run-qc-prod]
    if: github.event.inputs.environment == 'production'
    environment: production
    steps:
      - name: Deploy to PROD
        run: |
          echo "üöÄ Deploying to PROD on plviigoapps1..."
          cd /srv/deployments/igo-run-qc-node
          git pull
          cd frontend/
          CI=false npm run build
          cp -rT build/ ../backend/public/
          cd ..
          cp -rT backend/ /srv/www/runqc/
          chmod -R 775 /srv/www/runqc/public/
          pm2 restart runqc
          sleep 5
          if ! pm2 show runqc | grep -q "status.*online"; then
            echo "‚ùå PM2 process 'runqc' failed to start!"
            pm2 logs runqc --lines 50
            exit 1
          fi
          echo "‚úÖ PROD Deployment completed successfully"
